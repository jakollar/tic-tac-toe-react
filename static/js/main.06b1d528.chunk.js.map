{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","started","history","Array","fill","location","stepNumber","xIsNext","startGame","slice","length","calculateWinner","setState","concat","step","board","col","row","includes","calculateCoordinate","getBoard","status","getHistory","currentBoard","getCurrentBoard","winner","moves","map","move","coordinate","getCoordinate","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06b1d528.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      started: false,\n      history: [\n        {\n          squares: Array(9).fill(null),\n          location: null,\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    if (!this.state.started) {\n      this.startGame();\n    }\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const currentBoard = history[history.length - 1];\n    const squares = currentBoard.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          location: i,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  startGame() {\n    this.setState({\n      started: true,\n    });\n  }\n\n  getHistory() {\n    return this.state.history;\n  }\n\n  getBoard(step) {\n    return this.state.history[step];\n  }\n\n  getCurrentBoard() {\n    return this.state.history[this.state.stepNumber];\n  }\n\n  getCoordinate(step) {\n    const currentBoard = this.getBoard(step);\n    const location = currentBoard.location;\n    const coordinate = calculateCoordinate(location);\n    return coordinate;\n  }\n\n  render() {\n    const history = this.getHistory();\n    const currentBoard = this.getCurrentBoard();\n    const winner = calculateWinner(currentBoard.squares);\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    const moves = history.map((step, move) => {\n      const coordinate = this.getCoordinate(move);\n      const desc = move\n        ? 'Go to move #' + move + ': at ' + coordinate\n        : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={currentBoard.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction calculateCoordinate(location) {\n  const board = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n  ];\n\n  const col = location % 3;\n  let row = 0;\n  for (let i = 0; i < board.length; i++) {\n    if (board[i].includes(location)) {\n      row = i;\n    }\n  }\n\n  return `(${col}, ${row})`;\n}\n"],"sourceRoot":""}